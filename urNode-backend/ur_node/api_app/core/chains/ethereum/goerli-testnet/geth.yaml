apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
spec:
  selector:
    matchLabels:
      app: geth
  replicas: 1
  serviceName: geth
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: geth
    spec:
      terminationGracePeriodSeconds: 300
      containers:
        - name: geth
          image: ethereum/client-go
          ports:
            - { containerPort: 8545 }
            - { containerPort: 8546 }
            - { containerPort: 8551 }
            - { containerPort: 30303, protocol: TCP }
            - { containerPort: 30303, protocol: UDP }
          args:
            [
              "--http",
              "--http.addr=0.0.0.0",
              "--http.api=eth,net,web3,engine,admin",
              "--http.vhosts=*",
              "--http.corsdomain=*",
              "--ws",
              "--ws.addr=0.0.0.0",
              "--goerli",
              "--ws.api=eth,net,web3",
              "--ws.origins=*",
              "--graphql",
              "--graphql.corsdomain=*",
              "--graphql.vhosts=*",
              "--authrpc.addr=0.0.0.0",
              "--authrpc.vhosts=*",
              "--authrpc.jwtsecret=/jwt/jwt.hex",
              "--authrpc.port=8551",
              "--txlookuplimit=0",
              "--syncmode",
              "light"
            ]
          resources:
            requests:
              memory: 2G
              cpu: 1000m
            limits:
              memory: 16G
              cpu: 8000m
          livenessProbe:
            httpGet:
              path: /
              port: 8545
          readinessProbe:
            httpGet:
              path: /
              port: 8545
          volumeMounts:
            - name: chaindata
              mountPath: /root/.ethereum
      volumes:
        - name: chaindata
          persistentVolumeClaim:
            claimName: chaindata-geth
        - configMap:
            name: geth-jwt
          name: jwt
